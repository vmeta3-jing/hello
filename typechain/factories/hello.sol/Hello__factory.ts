/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Hello, HelloInterface } from "../../hello.sol/Hello";

const _abi = [
  {
    inputs: [],
    name: "say",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "content_",
        type: "string",
      },
    ],
    name: "setContent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103a3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633be8fd6a1461003b578063954ab4b214610050575b600080fd5b61004e610049366004610200565b61006e565b005b6100586100f1565b60405161006591906102dc565b60405180910390f35b6040517f3be8fd6a00000000000000000000000000000000000000000000000000000000815273__$2a6a6a051e3cb41cf495e4bd4c61f38bb6$__90633be8fd6a906100be9084906004016102dc565b60006040518083038186803b1580156100d657600080fd5b505af41580156100ea573d6000803e3d6000fd5b5050505050565b606073__$2a6a6a051e3cb41cf495e4bd4c61f38bb6$__6359016c796040518163ffffffff1660e01b815260040160006040518083038186803b15801561013757600080fd5b505af415801561014b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261017391908101906102f6565b905090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156101d0576101d0610178565b604052919050565b600067ffffffffffffffff8211156101f2576101f2610178565b50601f01601f191660200190565b60006020828403121561021257600080fd5b813567ffffffffffffffff81111561022957600080fd5b8201601f8101841361023a57600080fd5b803561024d610248826101d8565b6101a7565b81815285602083850101111561026257600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561029b578181015183820152602001610283565b838111156102aa576000848401525b50505050565b600081518084526102c8816020860160208601610280565b601f01601f19169290920160200192915050565b6020815260006102ef60208301846102b0565b9392505050565b60006020828403121561030857600080fd5b815167ffffffffffffffff81111561031f57600080fd5b8201601f8101841361033057600080fd5b805161033e610248826101d8565b81815285602083850101111561035357600080fd5b610364826020830160208601610280565b9594505050505056fea2646970667358221220f3770fbb0be576105c15454b97f63d3a005cc5a6457faf6570362db5380d231e64736f6c63430008090033";

type HelloConstructorParams =
  | [linkLibraryAddresses: HelloLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Hello__factory extends ContractFactory {
  constructor(...args: HelloConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Hello__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: HelloLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2a6a6a051e3cb41cf495e4bd4c61f38bb6\\$__", "g"),
      linkLibraryAddresses["contracts/hello.sol:HelloStorage"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Hello> {
    return super.deploy(overrides || {}) as Promise<Hello>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Hello {
    return super.attach(address) as Hello;
  }
  override connect(signer: Signer): Hello__factory {
    return super.connect(signer) as Hello__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloInterface {
    return new utils.Interface(_abi) as HelloInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Hello {
    return new Contract(address, _abi, signerOrProvider) as Hello;
  }
}

export interface HelloLibraryAddresses {
  ["contracts/hello.sol:HelloStorage"]: string;
}
